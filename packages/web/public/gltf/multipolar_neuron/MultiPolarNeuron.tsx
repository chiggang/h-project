/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Alain Sorazu (https://sketchfab.com/alainsorazu)
license: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
source: https://sketchfab.com/3d-models/multipolar-neuron-6834b20a2bc6473d85737587a20ff84f
title: Multipolar neuron
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_6: THREE.Mesh;
  };
  materials: {
    Nucleus: THREE.MeshStandardMaterial;
    Neuron: THREE.MeshPhysicalMaterial;
    Light: THREE.MeshStandardMaterial;
  };
};

export function MultiPolarNeuron(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./scene-transformed.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.05}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group position={[0.1, 8.39, 0.3]} scale={0.26}>
            <mesh
              geometry={nodes.Object_4.geometry}
              material={materials.Nucleus}
            />
            <mesh
              geometry={nodes.Object_5.geometry}
              material={materials.Neuron}
            />
            <mesh
              geometry={nodes.Object_6.geometry}
              material={materials.Light}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('./scene-transformed.glb');
